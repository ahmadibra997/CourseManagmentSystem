package coresy.userinterface;

import java.awt.event.ActionEvent;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import coresy.AdvisorTemplate;
import coresy.CourseTemplate;
import coresy.JsonHandler;
import coresy.SpecialRequest;
import coresy.StudentTemplate;

public class StudentUI extends javax.swing.JFrame {

        public StudentUI(StudentTemplate student, List<StudentTemplate> students, List<AdvisorTemplate> advisors,
                        List<CourseTemplate> courses) {
                initComponents(student, students, advisors, courses);
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        // @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // Code">//GEN-BEGIN:initComponents
        private void initComponents(StudentTemplate student, List<StudentTemplate> students,
                        List<AdvisorTemplate> advisors,
                        List<CourseTemplate> courses) {

                jTabbedPane1 = new javax.swing.JTabbedPane();
                jPanel1 = new javax.swing.JPanel();
                jScrollPane4 = new javax.swing.JScrollPane();
                registeredCourseList = new javax.swing.JList<>();
                registeredCoursesLabel = new javax.swing.JLabel();
                dropCoursesButton = new javax.swing.JButton();
                jPanel2 = new javax.swing.JPanel();
                jScrollPane1 = new javax.swing.JScrollPane();
                availableCoursesList = new javax.swing.JList<>();
                availableCoursesLabel = new javax.swing.JLabel();
                registerInCourseButton = new javax.swing.JButton();
                jPanel3 = new javax.swing.JPanel();
                jScrollPane3 = new javax.swing.JScrollPane();
                endedCoursesTable = new javax.swing.JTable();
                jPanel4 = new javax.swing.JPanel();
                phoneLabel = new javax.swing.JLabel();
                oldPasswordLabel = new javax.swing.JLabel();
                phoneNumberTextField = new javax.swing.JTextField();
                oldPasswordField = new javax.swing.JPasswordField();
                newPasswordLabel = new javax.swing.JLabel();
                confirmPasswordLabel = new javax.swing.JLabel();
                newPasswordField = new javax.swing.JPasswordField();
                confirmNewPasswordField = new javax.swing.JPasswordField();
                savePhoneNumberButton = new javax.swing.JButton();
                changePasswordButton = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                ///////////////////////////////////////////////////////////////////////////
                Map<String, CourseTemplate> registeredCoursesMap = new HashMap<>();
                // Registered Courses List
                List<CourseTemplate> registeredCoursesList = student.getRegisteredCourses();

                // Create a String[] array with the same size as the list
                String[] registeredCourseStrings = new String[registeredCoursesList.size()];

                // Populate the array with the names of the courses
                for (int i = 0; i < registeredCoursesList.size(); i++) {
                        CourseTemplate course = registeredCoursesList.get(i);
                        String courseData = "";
                        for (CourseTemplate c : courses) {
                                if (c.getCourseCode().equals(course.getCourseCode())) {
                                        courseData = c.getCourseName() + " - " + c.getSchedule();
                                }
                        }

                        // Assuming CourseTemplate has a getName() method to get the course name
                        registeredCourseStrings[i] = courseData;
                        registeredCoursesMap.put(courseData, course);
                }

                ///////////////////////////////////////////////////////////////////////////
                registeredCourseList.setModel(new javax.swing.AbstractListModel<String>() {

                        public int getSize() {
                                return registeredCourseStrings.length;
                        }

                        public String getElementAt(int i) {
                                return registeredCourseStrings[i];
                        }
                });
                registeredCourseList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                jScrollPane4.setViewportView(registeredCourseList);

                registeredCoursesLabel.setText("Registered Courses List:");

                dropCoursesButton.setText("Drop Course");
                dropCoursesButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                dropCoursesButtonActionPerformed(evt);
                        }

                        private void dropCoursesButtonActionPerformed(ActionEvent evt) {
                                int index = registeredCourseList.getSelectedIndex();
                                String droppedCourseName = (String) registeredCourseList.getModel().getElementAt(index);

                                CourseTemplate droppedCourse = registeredCoursesMap.get(droppedCourseName);
                                student.dropCourse(droppedCourse);
                                boolean changeSaved = false;
                                for (StudentTemplate s : students) {
                                        if (s.getUsername().contentEquals(student.getUsername())) {
                                                s = student;
                                                changeSaved = true;
                                                break;
                                        } else {
                                                changeSaved = false;
                                        }
                                }
                                for (CourseTemplate c : courses) {
                                        if (c.getCourseCode().contentEquals(droppedCourse.getCourseCode())) {
                                                c.removeStudent(student);
                                                changeSaved = true;
                                                break;
                                        } else {
                                                changeSaved = false;
                                        }
                                }
                                if (changeSaved) {
                                        JOptionPane.showMessageDialog(null, "Course dropped successfully.");
                                        JsonHandler.writeStudentsToJson(students, "src/coresy/systemdata/students.json");
                                        JsonHandler.writeCoursesToJson(courses, "src/coresy/systemdata/courses.json");
                                } else {
                                        JOptionPane.showMessageDialog(null, "Course could not be dropped.");
                                }

                                jPanel1.revalidate();
                                jPanel1.repaint();
                        }
                });

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(jPanel1Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(registeredCoursesLabel)
                                                                                .addGroup(jPanel1Layout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(jScrollPane4,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                237,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                .addComponent(dropCoursesButton)))
                                                                .addContainerGap(86, Short.MAX_VALUE)));
                jPanel1Layout.setVerticalGroup(
                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(registeredCoursesLabel)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(jPanel1Layout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(dropCoursesButton)
                                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                                .addComponent(jScrollPane4,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                255,
                                                                                                Short.MAX_VALUE))
                                                                .addContainerGap()));

                jTabbedPane1.addTab("Registered Courses", jPanel1);
                ////////////////////////////////////////////////////////////////////////
                Map<String, CourseTemplate> availableCoursesMap = new HashMap<>();
                // Registered Courses List
                List<CourseTemplate> endedCoursesList = student.getEndedCourses();
                List<CourseTemplate> avilableCoursesList = new ArrayList<CourseTemplate>();

                avilableCoursesList = CourseTemplate.isAvilable(courses, endedCoursesList);

                String[] acilableCourseStrings = new String[avilableCoursesList.size()];

                // Populate the array with the names of the courses
                for (int i = 0; i < avilableCoursesList.size(); i++) {
                        CourseTemplate course = avilableCoursesList.get(i);
                        String courseData = "";
                        for (CourseTemplate c : courses) {
                                if (c.getCourseCode().equals(course.getCourseCode())) {
                                        courseData = c.getCourseName() + " - " + c.getSchedule();
                                }
                        }

                        acilableCourseStrings[i] = courseData;
                        availableCoursesMap.put(courseData, course);

                }

                ///////////////////////////////////////////////////////////////////////////
                availableCoursesList.setModel(new javax.swing.AbstractListModel<String>() {

                        public int getSize() {
                                return acilableCourseStrings.length;
                        }

                        public String getElementAt(int i) {
                                return acilableCourseStrings[i];
                        }
                });
                availableCoursesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                jScrollPane1.setViewportView(availableCoursesList);

                availableCoursesLabel.setText("Available Courses List:");

                registerInCourseButton.setText("Register in Course");
                registerInCourseButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                registerInCoursesButtonActionPerformed(evt);
                        }

                        private void registerInCoursesButtonActionPerformed(ActionEvent evt) {
                                int index = availableCoursesList.getSelectedIndex();
                                String registeredCourseName = (String) availableCoursesList.getModel()
                                                .getElementAt(index);

                                CourseTemplate registeredINCourse = availableCoursesMap.get(registeredCourseName);

                                boolean studentUpdated = false;
                                boolean advisorUpdated = false;
                                boolean courseUpdated = false;
                                
                                CourseTemplate targetCourse = null;
                                for (CourseTemplate c : courses) {
                                        if (c.getCourseCode().contentEquals(registeredINCourse.getCourseCode())) {
                                                targetCourse = c;
                                                break;
                                        }
                                }
                                if (targetCourse != null) {
                                        if (targetCourse.addStudent(student)) {
                                                targetCourse = registeredINCourse;
                                                courseUpdated = true;
                                        } else {
                                                int choice = JOptionPane.showConfirmDialog(null,
                                                                "Your course does not have available spaces, would you like to submit a special request to course instructor?",
                                                                "Special Request", JOptionPane.YES_NO_OPTION);
                                                if (choice == JOptionPane.YES_OPTION) {
                                                        AdvisorTemplate targetAdvisor = null;
                                                        System.out.println("Looking for advisor: " + registeredINCourse
                                                                        .getAdvisor().getUsername());
                                                        for (AdvisorTemplate a : advisors) {
                                                                System.out.println("Considering advisor: "
                                                                                + a.getUsername());
                                                                if (a.getUsername().equals(registeredINCourse
                                                                                .getAdvisor().getUsername())) {
                                                                        System.out.println("Found advisor: "
                                                                                        + a.getUsername());
                                                                        targetAdvisor = a;
                                                                        break;
                                                                }
                                                        }
                                                        if (targetAdvisor != null) {
                                                                System.out.println("Found advisor for special request: "
                                                                                + targetAdvisor.getUsername());
                                                                SpecialRequest specialRequest = new SpecialRequest(
                                                                                student.getUsername(),
                                                                                registeredINCourse
                                                                                                .getCourseCode());

                                                                System.out.println("Submitting special request: "
                                                                                + specialRequest.getCourse() + "-"
                                                                                + specialRequest.getStudent());
                                                                // TODO: check why this is not working
                                                                if (targetAdvisor.getSpecialRequests().isEmpty()) {

                                                                        System.out.println(
                                                                                        "Adding special request to advisor: "
                                                                                                        + targetAdvisor.getUsername());
                                                                        targetAdvisor.addSpecialRequest(
                                                                                        specialRequest);
                                                                        System.out.println("Added special request: "
                                                                                        + specialRequest);

                                                                        for (AdvisorTemplate a : advisors) {
                                                                                System.out.println(
                                                                                                "Looking for advisor: "
                                                                                                                + a.getUsername());
                                                                                if (a.getUsername()
                                                                                                .equals(targetAdvisor
                                                                                                                .getUsername())) {
                                                                                        System.out.println(
                                                                                                        "Found advisor: "
                                                                                                                        + a.getUsername());
                                                                                        a = targetAdvisor;
                                                                                        advisorUpdated = true;
                                                                                        break;
                                                                                }
                                                                        }
                                                                        if (advisorUpdated) {
                                                                                JsonHandler.writeAdvisorsToJson(
                                                                                                advisors,
                                                                                                "src/coresy/systemdata/advisors.json");
                                                                                System.out.println(
                                                                                                "Wrote advisors to JSON");
                                                                                JOptionPane.showMessageDialog(
                                                                                                null,
                                                                                                "Special request submitted to instructor successfully!",
                                                                                                "Success",
                                                                                                JOptionPane.INFORMATION_MESSAGE);
                                                                        }

                                                                } else {
                                                                        for (SpecialRequest sr : targetAdvisor
                                                                                        .getSpecialRequests()) {
                                                                                System.out.println(
                                                                                                "Considering special request: "
                                                                                                                + sr);
                                                                                if (sr.getStudent().contentEquals(
                                                                                                student.getUsername())
                                                                                                && sr.getCourse()
                                                                                                                .contentEquals(registeredINCourse
                                                                                                                                .getCourseCode())) {
                                                                                        System.out.println(
                                                                                                        "Special request already submitted!");
                                                                                        JOptionPane.showMessageDialog(
                                                                                                        null,
                                                                                                        "Special request already submitted!",
                                                                                                        "Error",
                                                                                                        JOptionPane.ERROR_MESSAGE);
                                                                                        break;
                                                                                }
                                                                        }
                                                                }

                                                        } else {
                                                                JOptionPane.showMessageDialog(null,
                                                                                "Instructor not found, please inform IT department about this issue!",
                                                                                "Error",
                                                                                JOptionPane.ERROR_MESSAGE);
                                                        }
                                                }
                                        }
                                        if (courseUpdated) {
                                                student.registerInCourse(registeredINCourse);
                                                for (StudentTemplate s : students) {
                                                        if (s.getUsername().contentEquals(student.getUsername())) {
                                                                s = student;
                                                                studentUpdated = true;
                                                                break;
                                                        } else {
                                                                studentUpdated = false;
                                                        }
                                                }
                                                if (studentUpdated) {
                                                        JOptionPane.showMessageDialog(null,
                                                                        "Course registered successfully.");
                                                        JsonHandler.writeStudentsToJson(students,
                                                                        "src/coresy/systemdata/students.json");
                                                        JsonHandler.writeCoursesToJson(courses,
                                                                        "src/coresy/systemdata/courses.json");
                                                }

                                        } else {
                                                JOptionPane.showMessageDialog(null, "Course could not be registered.");
                                        }

                                }

                                // jPanel1.revalidate();
                                // jPanel1.repaint();
                        }
                });

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(jPanel2Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(availableCoursesLabel)
                                                                                .addGroup(jPanel2Layout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(jScrollPane1,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                239,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                .addComponent(registerInCourseButton)))
                                                                .addContainerGap(55, Short.MAX_VALUE)));
                jPanel2Layout.setVerticalGroup(
                                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(availableCoursesLabel)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel2Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jScrollPane1,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                255,
                                                                                                Short.MAX_VALUE)
                                                                                .addGroup(jPanel2Layout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(registerInCourseButton)
                                                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                                .addContainerGap()));

                jTabbedPane1.addTab("Avilavble Courses", jPanel2);

                Object[][] endedCourseData = new Object[student.getEndedCourses().size()][4];
                int i = 0;
                for (CourseTemplate c : student.getEndedCourses()) {
                        CourseTemplate course = null;
                        for (CourseTemplate tmp : courses) {
                                if (tmp.getCourseCode().equals(c.getCourseCode())) {
                                        course = tmp;
                                        break;
                                }
                        }
                        if (course != null) {
                                endedCourseData[i][0] = course.getCourseCode();
                                endedCourseData[i][1] = course.getCourseName();
                                endedCourseData[i][2] = course.getAdvisor().getFullName();
                                endedCourseData[i][3] = course.getCridets();
                        }
                        i++;
                }
                // TODO disable table filds editing
                endedCoursesTable.setModel(new javax.swing.table.DefaultTableModel(endedCourseData,
                                new String[] { "Code", "Name", "Advisor", "Cridets" }) {
                        boolean[] canEdit = new boolean[] { false, false, false, false };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit[columnIndex];
                        }
                });
                jScrollPane3.setViewportView(endedCoursesTable);

                javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                jPanel3.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 437,
                                                                Short.MAX_VALUE));
                jPanel3Layout.setVerticalGroup(
                                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 289,
                                                                Short.MAX_VALUE));

                jTabbedPane1.addTab("Ended Courses", jPanel3);

                phoneLabel.setText("Phone Number:");

                oldPasswordLabel.setText("Old Password:");

                phoneNumberTextField.setText(student.getPhoneNumber());

                newPasswordLabel.setText("New Password:");

                confirmPasswordLabel.setText("Confirm New Password:");

                savePhoneNumberButton.setText("Save");
                savePhoneNumberButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                savePhoneNumberButtonActionPerformed(evt);
                        }

                        private void savePhoneNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {
                                String phoneNumber = phoneNumberTextField.getText();
                                student.setPhoneNumber(phoneNumber);
                                boolean changeSaved = false;
                                for (StudentTemplate s : students) {
                                        if (s.getUsername().contentEquals(student.getUsername())) {
                                                s = student;
                                                changeSaved = true;
                                                break;
                                        }
                                }
                                if (changeSaved) {
                                        JsonHandler.writeStudentsToJson(students,
                                                        "src/coresy/systemdata/students.json");
                                        JOptionPane.showMessageDialog(null, "Phone number changed successfully.");
                                }
                        }
                });

                changePasswordButton.setText("Change Password");
                changePasswordButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                changePasswordButtonActionPerformed(evt);
                        }

                        private void changePasswordButtonActionPerformed(ActionEvent evt) {
                                boolean changeSaved = false;

                                for (StudentTemplate s : students) {
                                        System.out.println("Checking if student username and password match");
                                        if (s.getUsername().equals(student.getUsername()) &&
                                                        s.getPassword().equals(
                                                                        new String(oldPasswordField.getPassword()))) {
                                                System.out.println("Old password matches");
                                                if (new String(newPasswordField.getPassword()).equals(
                                                                new String(confirmNewPasswordField.getPassword()))) {
                                                        System.out.println("New password and confirmation match");
                                                        student.setPassword(new String(newPasswordField.getPassword()));
                                                        changeSaved = true;
                                                        break;
                                                } else {
                                                        System.out.println("New password and confirmation don't match");
                                                }

                                        } else {
                                                System.out.println("Student username and password don't match");
                                                changeSaved = false;
                                        }
                                }
                                if (changeSaved) {
                                        JsonHandler.writeStudentsToJson(students,
                                                        "src/coresy/systemdata/students.json");
                                        JOptionPane.showMessageDialog(null, "Password changed successfully.");
                                } else {
                                        JOptionPane.showMessageDialog(null, "Changing password failed!.");
                                }
                        }
                });

                javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
                jPanel4.setLayout(jPanel4Layout);
                jPanel4Layout.setHorizontalGroup(
                                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addGap(22, 22, 22)
                                                                .addGroup(jPanel4Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(jPanel4Layout
                                                                                                .createParallelGroup(
                                                                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                                .addGroup(jPanel4Layout
                                                                                                                .createSequentialGroup()
                                                                                                                .addGroup(jPanel4Layout
                                                                                                                                .createParallelGroup(
                                                                                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                                                .addComponent(confirmPasswordLabel)
                                                                                                                                .addComponent(newPasswordLabel,
                                                                                                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                                                                .addComponent(oldPasswordLabel,
                                                                                                                                                javax.swing.GroupLayout.Alignment.TRAILING))
                                                                                                                .addGap(59, 59, 59)
                                                                                                                .addGroup(jPanel4Layout
                                                                                                                                .createParallelGroup(
                                                                                                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                                                                false)
                                                                                                                                .addComponent(oldPasswordField,
                                                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                                                95,
                                                                                                                                                Short.MAX_VALUE)
                                                                                                                                .addComponent(newPasswordField)
                                                                                                                                .addComponent(confirmNewPasswordField)))
                                                                                                .addGroup(jPanel4Layout
                                                                                                                .createSequentialGroup()
                                                                                                                .addComponent(phoneLabel)
                                                                                                                .addGap(59, 59, 59)
                                                                                                                .addGroup(jPanel4Layout
                                                                                                                                .createParallelGroup(
                                                                                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                                                .addComponent(savePhoneNumberButton)
                                                                                                                                .addComponent(phoneNumberTextField,
                                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                95,
                                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                                                .addGroup(jPanel4Layout
                                                                                                .createSequentialGroup()
                                                                                                .addGap(186, 186, 186)
                                                                                                .addComponent(changePasswordButton)))
                                                                .addContainerGap(105, Short.MAX_VALUE)));
                jPanel4Layout.setVerticalGroup(
                                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addGap(47, 47, 47)
                                                                .addGroup(jPanel4Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                .addComponent(phoneLabel)
                                                                                .addComponent(phoneNumberTextField,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(savePhoneNumberButton)
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel4Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                .addComponent(oldPasswordLabel)
                                                                                .addComponent(oldPasswordField,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel4Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                .addComponent(newPasswordLabel)
                                                                                .addComponent(newPasswordField,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel4Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                .addComponent(confirmPasswordLabel)
                                                                                .addComponent(confirmNewPasswordField,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(changePasswordButton)
                                                                .addContainerGap(36, Short.MAX_VALUE)));

                jTabbedPane1.addTab("Edit Profile", jPanel4);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jTabbedPane1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                437,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 0, Short.MAX_VALUE)));
                layout.setVerticalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTabbedPane1));

                pack();
        }// </editor-fold>//GEN-END:initComponents

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel availableCoursesLabel;
        private javax.swing.JList<String> availableCoursesList;
        private javax.swing.JButton changePasswordButton;
        private javax.swing.JPasswordField confirmNewPasswordField;
        private javax.swing.JLabel confirmPasswordLabel;
        private javax.swing.JButton dropCoursesButton;
        private javax.swing.JTable endedCoursesTable;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JPanel jPanel2;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JPanel jPanel4;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane3;
        private javax.swing.JScrollPane jScrollPane4;
        private javax.swing.JTabbedPane jTabbedPane1;
        private javax.swing.JPasswordField newPasswordField;
        private javax.swing.JLabel newPasswordLabel;
        private javax.swing.JPasswordField oldPasswordField;
        private javax.swing.JLabel oldPasswordLabel;
        private javax.swing.JLabel phoneLabel;
        private javax.swing.JTextField phoneNumberTextField;
        private javax.swing.JButton registerInCourseButton;
        private javax.swing.JList<String> registeredCourseList;
        private javax.swing.JLabel registeredCoursesLabel;
        private javax.swing.JButton savePhoneNumberButton;
        // End of variables declaration//GEN-END:variables
}
