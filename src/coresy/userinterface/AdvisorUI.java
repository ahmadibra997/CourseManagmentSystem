
package coresy.userinterface;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import coresy.AdvisorTemplate;
import coresy.CourseTemplate;
import coresy.JsonHandler;
import coresy.SpecialRequest;
import coresy.StudentTemplate;

public class AdvisorUI extends javax.swing.JFrame {

    public AdvisorUI(AdvisorTemplate advisor, List<StudentTemplate> students, List<AdvisorTemplate> advisors,
            List<CourseTemplate> courses) {
        initComponents(advisor, students, advisors, courses);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents(AdvisorTemplate advisor, List<StudentTemplate> students, List<AdvisorTemplate> advisors,
            List<CourseTemplate> courses) {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        courseStudentsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        selectStudentLabel = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentCourcesTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        speciaRequestList = new javax.swing.JList<>();
        approveButton = new javax.swing.JButton();
        denyButton = new javax.swing.JButton();
        specialRequestsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Selecr Course:");

        ////////////////////////////////////////////////////////////////////////
        // TODO: ADD COURSES codes-names TO COMBOBOX
        Map<String, CourseTemplate> courseMap = new HashMap<>();
        for (CourseTemplate course : courses) {
            String courseData = course.getCourseCode() + " - " + course.getCourseName();
            jComboBox1.addItem(courseData);
            courseMap.put(courseData, course);
        }

        ///////////////////////////////////////////////////////////////////////////

        jComboBox1.addActionListener(new ActionListener() {

            /* };() { */
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedCourse = (String) jComboBox1.getSelectedItem();
                CourseTemplate course = courseMap.get(selectedCourse);

                if (course != null) {
                    List<StudentTemplate> studentsInCourse = course.getStudents();

                    Object[][] data = new Object[studentsInCourse.size()][4];
                    for (int i = 0; i < studentsInCourse.size(); i++) {
                        data[i][0] = studentsInCourse.get(i).getUserID();
                        data[i][1] = studentsInCourse.get(i).getUsername();
                        data[i][2] = studentsInCourse.get(i).getFirstName();
                        data[i][3] = studentsInCourse.get(i).getLastName();
                    }
                    courseStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
                            data,
                            new String[] {
                                    "ID", "Username", "First Name", "Last Name"
                            }));
                }
            }
        });

        jScrollPane1.setViewportView(courseStudentsTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199,
                                        Short.MAX_VALUE)));

        jTabbedPane1.addTab("Course Students", jPanel1);

        selectStudentLabel.setText("Select Student:");

        ////////////////////////////////////////////////////////////////////////

        Map<String, StudentTemplate> studentMap = new HashMap<>();
        for (StudentTemplate student : students) {
            String studentData = student.getFullName() + " - " + student.getUsername();
            jComboBox2.addItem(studentData);
            studentMap.put(studentData, student);
        }

        ///////////////////////////////////////////////////////////////////////////

        jComboBox2.addActionListener(new ActionListener() {

            /* };() { */
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedStudent = (String) jComboBox2.getSelectedItem();
                StudentTemplate student = studentMap.get(selectedStudent);

                if (student != null) {
                    List<CourseTemplate> detailedStudentCourse = new ArrayList<>();
                    List<CourseTemplate> studentsCourses = student.getRegisteredCourses();
                    for (CourseTemplate course : courses) {
                        for (CourseTemplate studentCourse : studentsCourses) {
                            if (course.getCourseCode().equals(studentCourse.getCourseCode())) {
                                detailedStudentCourse.add(course);
                            }
                        }
                    }

                    Object[][] data = new Object[detailedStudentCourse.size()][4];
                    for (int i = 0; i < detailedStudentCourse.size(); i++) {
                        data[i][0] = detailedStudentCourse.get(i).getCourseCode();
                        data[i][1] = detailedStudentCourse.get(i).getCourseName();
                        data[i][2] = detailedStudentCourse.get(i).getAdvisor().getFullName();
                        data[i][3] = detailedStudentCourse.get(i).getDescription();
                    }
                    studentCourcesTable.setModel(new javax.swing.table.DefaultTableModel(
                            data,
                            new String[] {
                                    "Course Code", "Course Name", "Advisor", "Description"
                            }));
                }
            }
        });

        jScrollPane2.setViewportView(studentCourcesTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(selectStudentLabel)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(206, Short.MAX_VALUE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(selectStudentLabel)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 199,
                                        Short.MAX_VALUE)));

        jTabbedPane1.addTab("Student Course", jPanel2);

        // TODO: view Specia Requests in speciaRequestList

        Map<String, StudentTemplate> studentRequestsMap = new HashMap<>();
        Map<String, CourseTemplate> courseRequestsMap = new HashMap<>();

        List<String> specialRequests = new ArrayList<>();

        List<StudentTemplate> requesteeStudent = new ArrayList<>();
        List<CourseTemplate> requesteeCourse = new ArrayList<>();

        for (SpecialRequest sr : advisor.getSpecialRequests()) {
            String requestString = sr.getStudent() + " - " + sr.getCourse();

            for (StudentTemplate student : students) {
                if (student.getUsername().equals(sr.getStudent())) {

                    studentRequestsMap.put(requestString, student);
                    requesteeStudent.add(student);

                }
            }
            for (CourseTemplate course : courses) {
                if (course.getCourseCode().equals(sr.getCourse())) {
                    courseRequestsMap.put(requestString, course);
                    requesteeCourse.add(course);
                }
            }
            specialRequests.add(requestString);
        }

        speciaRequestList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = specialRequests.toArray(new String[specialRequests.size()]);

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane4.setViewportView(speciaRequestList);

        approveButton.setText("Approve");

        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }

            private void approveButtonActionPerformed(ActionEvent evt) {
                int index = speciaRequestList.getSelectedIndex();
                if (index >= 0) {
                    String selectedRequest = (String) speciaRequestList.getModel().getElementAt(index);
                    StudentTemplate student = studentRequestsMap.get(selectedRequest);
                    CourseTemplate course = courseRequestsMap.get(selectedRequest);

                    if (student != null && course != null) {
                        student.registerInCourse(course);
                        course.advisorAddStudent(student);
                        specialRequests.remove(selectedRequest);
                        boolean changeSaved = false;
                        for (StudentTemplate s : students) {
                            if (s.getUsername().contentEquals(student.getUsername())) {
                                s = student;
                                changeSaved = true;
                                break;
                            }
                        }
                        for (CourseTemplate c : courses) {
                            if (c.getCourseCode().contentEquals(course.getCourseCode())) {
                                c = course;
                                changeSaved = true;
                                break;
                            }
                        }
                        for (SpecialRequest sr : advisor.getSpecialRequests()) {
                            if (sr.getStudent().equals(student.getUsername())
                                    && sr.getCourse().equals(course.getCourseCode())) {
                                advisor.removeSpecialRequest(sr);
                                changeSaved = true;
                                break;
                            }
                        }
                        speciaRequestList.setModel(new javax.swing.AbstractListModel<String>() {
                            String[] strings = specialRequests.toArray(new String[specialRequests.size()]);

                            public int getSize() {
                                return strings.length;
                            }

                            public String getElementAt(int i) {
                                return strings[i];
                            }
                        });
                        if (changeSaved) {
                            JsonHandler.writeAdvisorsToJson(advisors, "src/coresy/systemdata/advisors.json");
                            JsonHandler.writeStudentsToJson(students, "src/coresy/systemdata/students.json");
                            JsonHandler.writeCoursesToJson(courses, "src/coresy/systemdata/courses.json");

                            JOptionPane.showMessageDialog(null, "Request approved successfully!");
                        }
                    }
                }
            }
        });

        // approveButton.addActionListener(new ActionListener() {});

        denyButton.setText("Deny");
        denyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyButtonActionPerformed(evt);
            }

            private void denyButtonActionPerformed(ActionEvent evt) {
                int index = speciaRequestList.getSelectedIndex();
                if (index >= 0) {
                    String selectedRequest = (String) speciaRequestList.getModel().getElementAt(index);
                    StudentTemplate student = studentRequestsMap.get(selectedRequest);
                    CourseTemplate course = courseRequestsMap.get(selectedRequest);

                    if (student != null && course != null) {

                        specialRequests.remove(selectedRequest);
                        boolean changeSaved = false;
                        
                        
                        for (SpecialRequest sr : advisor.getSpecialRequests()) {
                            if (sr.getStudent().equals(student.getUsername())
                                    && sr.getCourse().equals(course.getCourseCode())) {
                                advisor.removeSpecialRequest(sr);
                                changeSaved = true;
                                break;
                            }
                        }
                        speciaRequestList.setModel(new javax.swing.AbstractListModel<String>() {
                            String[] strings = specialRequests.toArray(new String[specialRequests.size()]);

                            public int getSize() {
                                return strings.length;
                            }

                            public String getElementAt(int i) {
                                return strings[i];
                            }
                        });
                        if (changeSaved) {
                            JsonHandler.writeAdvisorsToJson(advisors, "src/coresy/systemdata/advisors.json");
                            
                            JOptionPane.showMessageDialog(null, "Request denied successfully!");
                        }
                    }
                }
            }
        });
        specialRequestsLabel.setText("Special Requests List:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 199,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel4Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(denyButton)
                                                        .addComponent(approveButton)))
                                        .addComponent(specialRequestsLabel))
                                .addContainerGap(82, Short.MAX_VALUE)));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(specialRequestsLabel)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(approveButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(denyButton)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 217,
                                                Short.MAX_VALUE))
                                .addContainerGap()));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        jTabbedPane1.addTab("Special Requests", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPane1)
                                .addGap(14, 14, 14)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveButton;
    private javax.swing.JTable courseStudentsTable;
    private javax.swing.JButton denyButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel selectStudentLabel;
    private javax.swing.JList<String> speciaRequestList;
    private javax.swing.JLabel specialRequestsLabel;
    private javax.swing.JTable studentCourcesTable;
    // End of variables declaration//GEN-END:variables
}
